best_k <- K
}
}
}
#define the model function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0*sqrt(area) #change this from m0/sqrt(area) to m0*sqrt(area)???
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#function to find NLLS starting values
get_my_starts <- function() {
nu = 0.01
m_start = nu*median(Data$area)/200
m0_start = m_start/sqrt(median(Data$area))
theta_start = median(Data$species)*6
starts <- data.frame(nu, m_start, m0_start, theta_start)
return(starts)
}
Data2 <- Data[Data$SimOrAnalytic == "simulation", ] #subset data to just simulation
starts <- get_my_starts() #get starting estimates
this_result = 0
best_fit_and_k <- list()
for (K in 1:ceiling(max(Data2$species))) { #for num of niches from 1 to max number of species
# #an atempt at finding starting values
# m_start = K/(1*median(Data2$area)*W(-K/1*(median(Data2$area)), branch = -1))
# gamma_start = (1*max(Data2$area - 1))*m_start/(1 - m_start)
#
# #species richness on largest island
# Largest_Island = Data2[Data2$area == max(Data2$area), ]
# SAmax = Largest_Island$species #found the mean here because we had two island of the same size
#
# theta_start = SAmax*gamma_start*log(m_start)/SAmax - gamma_start* log(m_start)*W((SAmax/gamma_start*log(m_start)*exp(SAmax/gamma_start*log(m_start))), branch = -1)
#fit the model
fit_chisholm <- try(nlsLM(species ~ chisholm_model(area, theta, m0, K), data = Data2,
start = list(theta = starts$theta_start, m0 = starts$m0_start)), silent = T)
#Get the R-squared value of the fitting
if(class(fit_chisholm) !="try-error"){
RSS <- sum(residuals(fit_chisholm)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data2$species - mean(Data2$species))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#if this RSq value is higher than the last one, we store the results
if (RSq >= this_result) {
fit_store <- fit_chisholm
this_result <- RSq
best_k <- K
}
}
}
best_fit_and_k[[1]] <- fit_store
best_fit_and_k[[2]] <- best_k
fit_store <- best_fit_and_k[[1]]
niches <- best_fit_and_k[[2]]
RSS <- sum(residuals(fit_store)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data2$species - mean(Data2$species))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#get the parameter estimates
a <- (summary(fit_store))$coefficients[, 1]
get_my_points <- function() {
area <- Data2$area
chisholm_points <- chisholm_model(area = area, theta = a[[1]], m0 = a[[2]], K = niches)
#merge NLLS points into dataframe with simulation and analytic results
migration = a[[2]]*sqrt(median(area))
df <- data.frame(area, chisholm_points, migration, K = niches, a[[1]])
df <- round(df, 5)
df$SimOrAnalytic <- "NLLS"
names(df) <- c("area", "species", "migration", "niches", "theta", "SimAnalyticNLLS")
colnames(Data)[7] <- "SimAnalyticNLLS"
Data <- Data[, -c(1)]
Data <- rbind(Data, df)
return(Data)
}
a
Data <- get_my_points()
m = a[[2]]*sqrt(median(Data$area))
k = niches
theta = a[[1]]
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*1*log(1/m)
#plot simulation, analytic and NLLS results
p1 <- ggplot(Data, aes(x = area, y = species, group = SimAnalyticNLLS)) +
scale_x_log10() +
xlab("log(area)")+
geom_point(aes(colour = SimAnalyticNLLS)) +
geom_line(aes(colour = SimAnalyticNLLS)) +
annotate(geom="text", x=150, y=250, label="NLLS Results",
color="red") +
annotate(geom="text", x=100, y=230, label="R^2:",
color="red") +
annotate(geom="text", x=200, y=230, label=c(round(RSq, 2)),
color="red") +
annotate(geom="text", x=100, y=210, label="m_rate:",
color="red") +
annotate(geom="text", x=200, y=210, label=c(round(m, 2)),
color="red") +
annotate(geom="text", x=100, y=190, label="niches:",
color="red") +
annotate(geom="text", x=200, y=190, label=c(round(k, 2)),
color="red") +
annotate(geom="text", x=80, y=170, label="theta:",
color="red") +
annotate(geom="text", x=250, y=170, label=c(round(theta, 2)),
color="red") +
annotate(geom="text", x=100, y=150, label="ACrit:",
color="red") +
annotate(geom="text", x=270, y=150, label=c(round(ACrit, 2)),
color="red") +
geom_vline(xintercept = ACrit, linetype="dotted",
color = "red", size=1.5) +
theme_bw()
p1
#plot simulation, analytic and NLLS results
p1 <- ggplot(Data, aes(x = area, y = species, group = SimAnalyticNLLS)) +
scale_x_log10() +
xlab("log(area)")+
geom_point(aes(colour = SimAnalyticNLLS)) +
geom_line(aes(colour = SimAnalyticNLLS)) +
annotate(geom="text", x=150, y=250, label="NLLS Results",
color="red") +
annotate(geom="text", x=100, y=230, label="R^2:",
color="red") +
annotate(geom="text", x=200, y=230, label=c(round(RSq, 2)),
color="red") +
annotate(geom="text", x=100, y=210, label="m_rate:",
color="red") +
annotate(geom="text", x=200, y=210, label=c(round(m, 2)),
color="red") +
annotate(geom="text", x=100, y=190, label="niches:",
color="red") +
annotate(geom="text", x=200, y=190, label=c(round(k, 2)),
color="red") +
annotate(geom="text", x=80, y=170, label="theta:",
color="red") +
annotate(geom="text", x=250, y=170, label=c(round(theta, 2)),
color="red") +
annotate(geom="text", x=100, y=150, label="ACrit:",
color="red") +
annotate(geom="text", x=270, y=150, label=c(round(ACrit, 2)),
color="red") +
geom_vline(xintercept = log(ACrit), linetype="dotted",
color = "red", size=1.5) +
theme_bw()
p1
#Let's get our critical area for regime transition
theta = 1000
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*1*log(1/m)
#Let's get our critical area for regime transition
theta = 10000
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*1*log(1/m)
#plot simulation, analytic and NLLS results
p1 <- ggplot(Data, aes(x = area, y = species, group = SimAnalyticNLLS)) +
scale_x_log10() +
xlab("log(area)")+
geom_point(aes(colour = SimAnalyticNLLS)) +
geom_line(aes(colour = SimAnalyticNLLS)) +
annotate(geom="text", x=150, y=250, label="NLLS Results",
color="red") +
annotate(geom="text", x=100, y=230, label="R^2:",
color="red") +
annotate(geom="text", x=200, y=230, label=c(round(RSq, 2)),
color="red") +
annotate(geom="text", x=100, y=210, label="m_rate:",
color="red") +
annotate(geom="text", x=200, y=210, label=c(round(m, 2)),
color="red") +
annotate(geom="text", x=100, y=190, label="niches:",
color="red") +
annotate(geom="text", x=200, y=190, label=c(round(k, 2)),
color="red") +
annotate(geom="text", x=80, y=170, label="theta:",
color="red") +
annotate(geom="text", x=250, y=170, label=c(round(theta, 2)),
color="red") +
annotate(geom="text", x=100, y=150, label="ACrit:",
color="red") +
annotate(geom="text", x=270, y=150, label=c(round(ACrit, 2)),
color="red") +
geom_vline(xintercept = log(ACrit), linetype="dotted",
color = "red", size=1.5) +
theme_bw()
p1
#Let's get our critical area for regime transition
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*1*log(1/m)
#plot simulation, analytic and NLLS results
p1 <- ggplot(Data, aes(x = area, y = species, group = SimAnalyticNLLS)) +
scale_x_log10() +
xlab("log(area)")+
geom_point(aes(colour = SimAnalyticNLLS)) +
geom_line(aes(colour = SimAnalyticNLLS)) +
annotate(geom="text", x=150, y=250, label="NLLS Results",
color="red") +
annotate(geom="text", x=100, y=230, label="R^2:",
color="red") +
annotate(geom="text", x=200, y=230, label=c(round(RSq, 2)),
color="red") +
annotate(geom="text", x=100, y=210, label="m_rate:",
color="red") +
annotate(geom="text", x=200, y=210, label=c(round(m, 2)),
color="red") +
annotate(geom="text", x=100, y=190, label="niches:",
color="red") +
annotate(geom="text", x=200, y=190, label=c(round(k, 2)),
color="red") +
annotate(geom="text", x=80, y=170, label="theta:",
color="red") +
annotate(geom="text", x=250, y=170, label=c(round(theta, 2)),
color="red") +
annotate(geom="text", x=100, y=150, label="ACrit:",
color="red") +
annotate(geom="text", x=270, y=150, label=c(round(ACrit, 2)),
color="red") +
geom_vline(xintercept = log(ACrit), linetype="dotted",
color = "red", size=1.5) +
theme_bw()
pdf("../../Results/Simulation2/NLLS/SimAnalyticNLLSfit_changed.pdf")
print(p1)
dev.off()
p1
#plot simulation, analytic and NLLS results
p1 <- ggplot(Data, aes(x = area, y = species, group = SimAnalyticNLLS)) +
scale_x_log10() +
xlab("log(area)")+
geom_point(aes(colour = SimAnalyticNLLS)) +
geom_line(aes(colour = SimAnalyticNLLS)) +
annotate(geom="text", x=150, y=250, label="NLLS Results",
color="red") +
annotate(geom="text", x=100, y=230, label="R^2:",
color="red") +
annotate(geom="text", x=200, y=230, label=c(round(RSq, 2)),
color="red") +
annotate(geom="text", x=100, y=210, label="m_rate:",
color="red") +
annotate(geom="text", x=200, y=210, label=c(round(m, 2)),
color="red") +
annotate(geom="text", x=100, y=190, label="niches:",
color="red") +
annotate(geom="text", x=200, y=190, label=c(round(k, 2)),
color="red") +
annotate(geom="text", x=80, y=170, label="theta:",
color="red") +
annotate(geom="text", x=250, y=170, label=c(round(theta, 2)),
color="red") +
annotate(geom="text", x=100, y=150, label="ACrit:",
color="red") +
annotate(geom="text", x=270, y=150, label=c(round(ACrit, 2)),
color="red") +
geom_vline(xintercept = ACrit, linetype="dotted",
color = "red", size=1.5) +
theme_bw()
p1
pdf("../../Results/Simulation2/NLLS/SimAnalyticNLLSfit_changed.pdf")
print(p1)
dev.off()
#let's export our parameter estimations
parameters <- cbind.data.frame(m, niches, theta)
write.csv(parameters, "../../Results/Simulation2/parameters_changed.csv", row.names = FALSE)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
MyData <- read.csv("../../Data/TotalData.csv")
#which datasets have area values?
MyAreaData <- MyData[!is.na(MyData$area.metric),]
#define the model function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0*sqrt(area) #change this from m0/sqrt(area) to m0*sqrt(area)???
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#function to find NLLS starting values
get_my_starts <- function() {
nu = 0.01
m_start = nu*median(Data$area)/200
m0_start = m_start/sqrt(median(Data$area))
theta_start = median(Data$sp.rich)
starts <- data.frame(nu, m_start, m0_start, theta_start)
return(starts)
}
i = 1
get_my_points <- function() {
area <- Data$area
chisholm_points <- chisholm_model(area = area, theta = a[[1]], m0 = a[[2]], K = niches)
#NLLS points into dataframe
df <- data.frame(area, chisholm_points)
df <- round(df, 5)
names(df) <- c("area", "species")
return(df)
}
ID <- unique(MyAreaData$ID)[i] #get the ID
Data<-MyAreaData[which(MyAreaData$ID==ID),]
#should I do the fitting before or after log scaling the data?
best_fit_and_k <- try(NLLSfits(), silent = T)
starts <- get_my_starts() #get starting estimates
View(starts)
this_result = 0
best_fit_and_k <- list()
K = 1
#fit the model
fit_chisholm <- try(nlsLM(sp.rich ~ chisholm_model(area, theta, m0, K), data = Data,
start = list(theta = starts$theta_start, m0 = starts$m0_start), lower=c(0, 0), upper=c(Inf, 1)), silent = T)
View(fit_chisholm)
summary(fit_chisholm)
for (K in 1:ceiling(max(Data$sp.rich))) { #for num of niches from 1 to max number of species
#fit the model
fit_chisholm <- try(nlsLM(sp.rich ~ chisholm_model(area, theta, m0, K), data = Data,
start = list(theta = starts$theta_start, m0 = starts$m0_start), lower=c(0, 0), upper=c(Inf, 1)), silent = T)
#Get the R-squared value of the fitting
if(class(fit_chisholm) !="try-error"){
RSS <- sum(residuals(fit_chisholm)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data$sp.rich - mean(Data$sp.rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#if this RSq value is higher than the last one, we store the results
if (RSq >= this_result) {
fit_store <- fit_chisholm
this_result <- RSq
best_k <- K
}
}
}
best_fit_and_k[[1]] <- fit_store
best_fit_and_k[[2]] <- best_k
fit_store <- best_fit_and_k[[1]]
niches <- best_fit_and_k[[2]]
RSS <- sum(residuals(fit_store)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data$sp.rich - mean(Data$sp.rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#get the parameter estimates
a <- (summary(fit_store))$coefficients[, 1]
#get our points for plotting
df <- get_my_points()
#get our parameters
m0 = a[[2]]
m = m0*sqrt(median(Data$area))
k = niches
theta = a[[1]]
#rho is the individual density per unit area, how can we find this out?
rho = 1
#Let's get our critical area for regime transition
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*rho*log(1/m)
author = paste(as.character(Data$author[1]), as.character(Data$year[1]))
p1 <- ggplot(Data, aes(x = area, y = sp.rich)) +
geom_point()+
#scale_x_log10() +
ggtitle(paste(author, substr(Data$title, start = 1, stop = 45), "...")) +
xlab(paste("log(area)", Data$area.metric)) +
ylab(paste("richness (", Data$sp.rich.metric, ")")) +
geom_smooth(data = df, aes(x=area, y=species), se=F)+
geom_vline(xintercept = ACrit, linetype="dotted",
color = "red", size=1.5) +
theme_bw()
if (Data$log.area[1]=="no"){
p1 = p1 + scale_x_log10()
}
p1
#should I do the fitting before or after log scaling the data?
best_fit_and_k <- try(NLLSfits(), silent = T)
ID <- unique(MyAreaData$ID)[i] #get the ID
Data<-MyAreaData[which(MyAreaData$ID==ID),]
#should I do the fitting before or after log scaling the data?
best_fit_and_k <- try(NLLSfits(), silent = T)
for (i in 1:length(unique(MyAreaData$ID))) {
ID <- unique(MyAreaData$ID)[i] #get the ID
Data<-MyAreaData[which(MyAreaData$ID==ID),]
#should I do the fitting before or after log scaling the data?
best_fit_and_k <- try(NLLSfits(), silent = T)
if(class(best_fit_and_k) !="try-error"){
fit_store <- best_fit_and_k[[1]]
niches <- best_fit_and_k[[2]]
#Get the R-squared value of the fitting
RSS <- sum(residuals(fit_store)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data$sp.rich - mean(Data$sp.rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#get the parameter estimates
a <- (summary(fit_store))$coefficients[, 1]
#get our points for plotting
df <- get_my_points()
#get our parameters
m0 = a[[2]]
m = m0*sqrt(median(Data$area))
k = niches
theta = a[[1]]
#rho is the individual density per unit area, how can we find this out?
rho = 1
#Let's get our critical area for regime transition
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*rho*log(1/m)
#plot simulation, analytic and NLLS results
author = paste(as.character(Data$author[1]), as.character(Data$year[1]))
p1 <- ggplot(Data, aes(x = area, y = sp.rich)) +
geom_point()+
#scale_x_log10() +
ggtitle(paste(author, substr(Data$title, start = 1, stop = 45), "...")) +
xlab(paste("log(area)", Data$area.metric)) +
ylab(paste("richness (", Data$sp.rich.metric, ")")) +
geom_smooth(data = df, aes(x=area, y=species), se=F)+
geom_vline(xintercept = ACrit, linetype="dotted",
color = "red", size=1.5) +
theme_bw()
if (Data$log.area[1]=="no"){
p1 = p1 + scale_x_log10()
}
file_name = paste("../../Results/NLLSplot_", author, ".pdf", sep="")
pdf(file_name)
print(p1)
dev.off()
parameters <- data.frame(i, RSq, ACrit, m0, m, k, theta)
names(parameters) <- c("ID", "R^2", "CriticalArea", "m0", "m_rate", "k", "theta")
all_parameters <- rbind(all_parameters, parameters)
}
}
NLLSfits <- function() {
starts <- get_my_starts() #get starting estimates
this_result = 0
best_fit_and_k <- list()
for (K in 1:ceiling(max(Data$sp.rich))) { #for num of niches from 1 to max number of species
#fit the model
fit_chisholm <- try(nlsLM(sp.rich ~ chisholm_model(area, theta, m0, K), data = Data,
start = list(theta = starts$theta_start, m0 = starts$m0_start), lower=c(0, 0), upper=c(Inf, 1)), silent = T)
#Get the R-squared value of the fitting
if(class(fit_chisholm) !="try-error"){
RSS <- sum(residuals(fit_chisholm)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data$sp.rich - mean(Data$sp.rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#if this RSq value is higher than the last one, we store the results
if (RSq >= this_result) {
fit_store <- fit_chisholm
this_result <- RSq
best_k <- K
}
}
}
best_fit_and_k[[1]] <- fit_store
best_fit_and_k[[2]] <- best_k
return(best_fit_and_k)
}
get_my_points <- function() {
area <- Data$area
chisholm_points <- chisholm_model(area = area, theta = a[[1]], m0 = a[[2]], K = niches)
#NLLS points into dataframe
df <- data.frame(area, chisholm_points)
df <- round(df, 5)
names(df) <- c("area", "species")
return(df)
}
all_parameters <- data.frame(ID = numeric(0), RSquared = numeric(0), criticalarea = numeric(0),
m0 = numeric(0), mrate = numeric(0), k = numeric(0), theta=numeric(0))
names(all_parameters) <- c("ID", "R^2", "CriticalArea", "m0", "m_rate", "k", "theta")
for (i in 1:length(unique(MyAreaData$ID))) {
ID <- unique(MyAreaData$ID)[i] #get the ID
Data<-MyAreaData[which(MyAreaData$ID==ID),]
#should I do the fitting before or after log scaling the data?
best_fit_and_k <- try(NLLSfits(), silent = T)
if(class(best_fit_and_k) !="try-error"){
fit_store <- best_fit_and_k[[1]]
niches <- best_fit_and_k[[2]]
#Get the R-squared value of the fitting
RSS <- sum(residuals(fit_store)^2) #Residual sum of squares of our NLLS model
TSS <- sum((Data$sp.rich - mean(Data$sp.rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#get the parameter estimates
a <- (summary(fit_store))$coefficients[, 1]
#get our points for plotting
df <- get_my_points()
#get our parameters
m0 = a[[2]]
m = m0*sqrt(median(Data$area))
k = niches
theta = a[[1]]
#rho is the individual density per unit area, how can we find this out?
rho = 1
#Let's get our critical area for regime transition
ACrit <- theta*(1-m)*(exp(k/theta)-1)/m*rho*log(1/m)
#plot simulation, analytic and NLLS results
author = paste(as.character(Data$author[1]), as.character(Data$year[1]))
p1 <- ggplot(Data, aes(x = area, y = sp.rich)) +
geom_point()+
#scale_x_log10() +
ggtitle(paste(author, substr(Data$title, start = 1, stop = 45), "...")) +
xlab(paste("log(area)", Data$area.metric)) +
ylab(paste("richness (", Data$sp.rich.metric, ")")) +
geom_smooth(data = df, aes(x=area, y=species), se=F)+
geom_vline(xintercept = ACrit, linetype="dotted",
color = "red", size=1.5) +
theme_bw()
if (Data$log.area[1]=="no"){
p1 = p1 + scale_x_log10()
}
file_name = paste("../../Results/NLLSplot_", author, ".pdf", sep="")
pdf(file_name)
print(p1)
dev.off()
parameters <- data.frame(i, RSq, ACrit, m0, m, k, theta)
names(parameters) <- c("ID", "R^2", "CriticalArea", "m0", "m_rate", "k", "theta")
all_parameters <- rbind(all_parameters, parameters)
}
}
all_parameters$`R^2` <- round(all_parameters$`R^2`, digits = 2)
all_parameters$CriticalArea <- signif(all_parameters$CriticalArea, digits = 3)
all_parameters$m0 <- signif(all_parameters$m0, digits = 3)
all_parameters$m_rate <- signif(all_parameters$m_rate, digits = 3)
all_parameters$theta <- round(all_parameters$theta, digits = 2)
write.csv(all_parameters, "../../Results/Plots/NLLSParameters.csv", row.names = FALSE)
View(all_parameters)
View(all_parameters)
