rm(list=ls())
graphics.off()
#install.packages("dplyr") #<- for checking data before two way anova
library("dplyr")
#install.packages("ggpubr") #<- for boxplot visualisations
library("ggpubr")
library(viridis) #<- for boxplot colours
#read in datasets
Data <- read.csv("../../Results/FinalNLLSFittingResults.csv")
ClassicAIC <- read.csv("../../Results/ClassicPowResults.csv")
DepthAIC <- read.csv("../../Results/DepthPowResults.csv")
PerimeterAIC <- read.csv("../../Results/PeriPowResults.csv")
#Power Law Analysis
#combin classic, depth and peri AIC scores
PowEdit <- ClassicAIC
PowEdit$AIC_Depth <- DepthAIC[,(18)]
PowEdit$AIC_Peri <- PerimeterAIC[,(18)]
colnames(PowEdit)[18] <- "AIC_Classic"
View(PowEdit)
View(PowEdit[1])
View(PowEdit[1,])
View(PowEdit[2,])
#mean z value before removing failed fits
z_value <- mean(PowEdit$Z)
#remove failed fittings
Vec <- vector()
for (i in 1:nrow(PowEdit)){
if (PowEdit$RSqAdj[i] > 0 && PowEdit$RSqAdj[i] < 1){
Vec <- c(Vec, i)
}
}
PowChop <- data.frame()
for (i in 1:length(Vec)){
PowChop <- rbind(PowChop, PowEdit[Vec[[i]], ])
}
View(PowChop[1,])
View(PowChop[2,])
View(PowChop[3,])
View(PowChop[4,])
View(PowChop[5,])
View(PowChop[7,])
View(PowChop[6,])
View(PowChop[8,])
View(PowChop[9,])
View(PowChop[10,])
View(PowChop[11,])
View(PowChop[12,])
View(PowChop[13,])
View(PowChop[14,])
View(PowChop[15,])
View(PowChop[16,])
View(PowChop[17,])
View(PowChop[18,])
View(PowChop[19,])
View(PowChop[20,])
View(PowChop[21,])
View(PowChop[22,])
View(PowChop[23,])
View(PowChop[24,])
View(PowChop)
View(PowChop)
10-1
1-10
View(Data)
#mean scores for power model
mean_z <- mean(PowChop$Z)
meanR <- mean(PowChop$RSq)
meanAR <- mean(PowChop$RSqAdj)
#how many times did the models perform better?
nrow(PowChop[PowChop$AIC_Classic>2, ])
nrow(PowChop[PowChop$AIC_Depth>2, ])
nrow(PowChop[PowChop$AIC_Peri>2, ])
#remove datasets that have Adj RSq that are less than 0 or more than 1
Vec <- vector()
for (i in 1:nrow(Data)){
if (Data$Peri_AdjR2[i] > 0 && Data$Peri_AdjR2[i] < 1
|| Data$Classic_AdjR2[i] > 0 && Data$Classic_AdjR2[i] < 1
|| Data$Depth_AdjR2[i] > 0 && Data$Depth_AdjR2[i] < 1) {
Vec <- c(Vec, i)
}
}
#bind together the best fits
DataEdit <- data.frame()
for (i in 1:length(Vec)){
DataEdit <- rbind(DataEdit, Data[Vec[[i]], ])
}
#mean R2 and adj R2 scores for each model
meanClassic <- mean(DataEdit$Classic_R2)
AdjmeanClassic <- mean(DataEdit$Classic_AdjR2)
meanDepth <- mean(DataEdit$Depth_R2)
AdjmeanDepth <- mean(DataEdit$Depth_AdjR2)
meanPeri <- mean(DataEdit$Peri_R2)
AdjmeanPeri <- mean(DataEdit$Peri_AdjR2)
#export as table
models <- c("Classic", "Depth", "Perimeter")
R_scores <- round(c(meanClassic, meanDepth, meanPeri), digits=3)
AdR_scores <- round(c(AdjmeanClassic, AdjmeanDepth, AdjmeanPeri), digits=3)
R_results <- data.frame(models, R_scores, AdR_scores)
colnames(R_results) <- c("Model", "R2", "Adj R2")
write.csv(R_results, "../../Other/FinalReport/RResults.csv", row.names = FALSE, quote=FALSE)
#for each dataset get the best results and put into dataframe
Final <- list()
for (x in 1:nrow(DataEdit)){
dataset <- DataEdit[x,]
if (dataset$Peri_AdjR2 > dataset$Classic_AdjR2 && dataset$Peri_AdjR2 > dataset$Depth_AdjR2){
z <- dataset[,c(1:14, 17, 20, 23, 26, 29, 32)]
names(z)[14] <- "R2"
names(z)[15] <- "AdjR2" #peri best
names(z)[16] <- "Theta"
names(z)[17] <- "K"
names(z)[18] <- "m0"
names(z)[19] <- "rho"
names(z)[20] <- "ACrit"
Final[[x]] <- z
} else if (dataset$Classic_AdjR2 > dataset$Peri_AdjR2 && dataset$Classic_AdjR2 > dataset$Depth_AdjR2){
z <- dataset[,c(1:13, 15, 18, 21, 24, 27, 30, 33)]
names(z)[14] <- "R2"
names(z)[15] <- "AdjR2"
names(z)[16] <- "Theta" #classic best
names(z)[17] <- "K"
names(z)[18] <- "m0"
names(z)[19] <- "rho"
names(z)[20] <- "ACrit"
Final[[x]] <- z
} else if (dataset$Depth_AdjR2 > dataset$Classic_AdjR2 && dataset$Depth_AdjR2 > dataset$Peri_AdjR2){
z <- dataset[,c(1:13, 16, 19, 22, 25, 28, 31, 34)]
names(z)[14] <- "R2"
names(z)[15] <- "AdjR2"
names(z)[16] <- "Theta" #depth best
names(z)[17] <- "K"
names(z)[18] <- "m0"
names(z)[19] <- "rho"
names(z)[20] <- "ACrit"
Final[[x]] <- z
} else if (dataset$Depth_AdjR2 == dataset$Classic_AdjR2 && dataset$Depth_AdjR2 == dataset$Peri_AdjR2){
z <- dataset[,1:13]
z$R2 <- mean(dataset$Peri_R2, dataset$Classic_R2, dataset$Depth_R2)
z$AdjR2 <- mean(dataset$Peri_AdjR2, dataset$Classic_AdjR2, dataset$Depth_AdjR2)
z$Theta <- mean(dataset$Peri_theta, dataset$Classic_theta, dataset$Depth_theta) #all three best
z$K <- mean(dataset$Peri_K, dataset$Classic_K, dataset$Depth_K)
z$m0 <- mean(dataset$Peri_m0, dataset$Classic_m0, dataset$Depth_m0)
z$rho <- mean(dataset$Peri_rho, dataset$Classic_rho, dataset$Depth_rho)
z$ACrit <- mean(dataset$Peri_ACrit, dataset$Classic_ACrit, dataset$Depth_ACrit)
Final[[x]] <- z
} else if ( dataset$Depth_AdjR2 == dataset$Classic_AdjR2 && dataset$Depth_AdjR2 > dataset$Peri_AdjR2){
z <- dataset[,1:13]
z$R2 <- mean(dataset$Classic_R2, dataset$Depth_R2)
z$AdjR2 <- mean(dataset$Classic_AdjR2, dataset$Depth_AdjR2) #depth and classic best
z$Theta <- mean(dataset$Classic_theta, dataset$Depth_theta)
z$K <- mean(dataset$Classic_K, dataset$Depth_K)
z$m0 <- mean(dataset$Classic_m0, dataset$Depth_m0)
z$rho <- mean(dataset$Classic_rho, dataset$Depth_rho)
z$ACrit <- mean(dataset$Classic_ACrit, dataset$Depth_ACrit)
Final[[x]] <- z
} else if ( dataset$Depth_AdjR2 == dataset$Peri_AdjR2 && dataset$Depth_AdjR2 > dataset$Classic_AdjR2){
z <- dataset[,1:13]
z$R2 <- mean(dataset$Peri_R2, dataset$Depth_R2)
z$AdjR2 <- mean(dataset$Peri_AdjR2, dataset$Depth_AdjR2) #depth and peri best
z$Theta <- mean(dataset$Peri_theta, dataset$Depth_theta)
z$K <- mean(dataset$Peri_K, dataset$Depth_K)
z$m0 <- mean(dataset$Peri_m0, dataset$Depth_m0)
z$rho <- mean(dataset$Peri_rho, dataset$Depth_rho)
z$ACrit <- mean(dataset$Peri_ACrit, dataset$Depth_ACrit)
Final[[x]] <- z
} else if ( dataset$Classic_AdjR2 == dataset$Peri_AdjR2 && dataset$Classic_AdjR2 > dataset$Classic_AdjR2){
z <- dataset[,1:13]
z$R2 <- mean(dataset$Peri_R2, dataset$Classic_R2)
z$AdjR2 <- mean(dataset$Peri_AdjR2, dataset$Classic_AdjR2) #classic and peri best
z$Theta <- mean(dataset$Peri_theta, dataset$Classic_theta)
z$K <- mean(dataset$Peri_K, dataset$Classic_K)
z$m0 <- mean(dataset$Peri_m0, dataset$Classic_m0)
z$rho <- mean(dataset$Peri_rho, dataset$Classic_rho)
z$ACrit <- mean(dataset$Peri_ACrit, dataset$Classic_ACrit)
Final[[x]] <- z
}
}
TotalData <- do.call("rbind", Final)
View(TotalData)
View(DataEdit)
Combo <- c("Classic", "Depth", "Perimeter", "Classic and Depth", "Classic and Perimeter", "Depth and Perimeter", "All")
Score <- c(1, 2, 2, 10, 0, 0, 9)
Score_Combo <- data.frame(Combo, Score)
#export as csv
write.csv(Score_Combo, "../../Other/FinalReport/BestModel.csv", row.names=FALSE, quote=FALSE)
#export as csv
write.csv(Score_Combo, "../../FinalReport/BestModel.csv", row.names=FALSE, quote=FALSE)
