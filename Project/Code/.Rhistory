View(data)
data$LogArea <- as.numeric(as.character(data$LogArea)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
data <- data[is.finite(rowSums(data)),]
View(data)
data[is.finite(rowSums(data)),]
data <- data$LogSpecies_rich[is.finite(rowSums(data$LogSpecies_rich)),]
x <- data.frame(datasets[j])
LogArea <- log(x[5]) #assign the area column of our dataframe to a vector
LogSpecies_rich <- log(x[6])#assign the species richness column of our dataframe to a vector
data <- data.frame(LogArea, LogSpecies_rich) #bind into a new dataframe we will use for fitting
names(data) <- c("LogArea", "LogSpecies_rich") #rename the columns
data$LogArea <- as.numeric(as.character(data$LogArea)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
data <- data[is.finite(rowSums(data)),]
author <- x[[2]][[1]]
data <- data.frame(author, data)
View(data)
best_fit_results <- NA
best_plot_points <- NA
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
#####HERE WE LOAD ALL OF OUT DATASETS INTO A LIST OF DATAFRAMES#####
folder <- "../Data/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list()
#define the function
chisholm_model <- function(LogArea, theta, m0, K) {
rho = 1
K = K
Js = LogArea*rho
J_stars = Js/K
ms = m0/sqrt(LogArea)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#FOR EACH DATASET IN THE LIST OF DATAFRAMES
#FIND THE COLUMN WITH SPECIES IN IT AND RENAME THIS SPECIES_RICH
for (j in 1:length(datasets)) {
x <- data.frame(datasets[j])
LogArea <- log(x[5]) #assign the area column of our dataframe to a vector
LogSpecies_rich <- log(x[6])#assign the species richness column of our dataframe to a vector
data <- data.frame(LogArea, LogSpecies_rich) #bind into a new dataframe we will use for fitting
names(data) <- c("LogArea", "LogSpecies_rich") #rename the columns
data$LogArea <- as.numeric(as.character(data$LogArea)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
data <- data[is.finite(rowSums(data)),]
author <- x[[2]][[1]]
data <- data.frame(author, data)
best_fit_results <- NA
best_plot_points <- NA
a <- 0 #for re-setting RSq value after each dataset fit
#Loop through the model fitting, with niche values (K) from 1 to maximum species richness
#calculate R^2 value and store best parameter results
for(K in 1:max(length(data$LogSpecies_rich))) {
chisholm_fit <- try(nlsLM(LogSpecies_rich ~ chisholm_model(LogArea, theta, m0, K), data = data, start = list(theta = 200, m0 = 0.0005, K=K)), silent=T)
#Calculate the sum of squared errors - if there was no error in the model fitting!
if(class(chisholm_fit) != "try-error"){
RSS <- sum(residuals(chisholm_fit)^2) #Residual sum of squares of our NLLS model
TSS <- sum((data$LogSpecies_rich - mean(data$LogSpecies_rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#store these results
results <- data.frame(author, RSq, coef(chisholm_fit)["theta"], coef(chisholm_fit)["m0"], K)
names(results) <- c("Author", "R-Squared", "Theta", "Immigration", "Niches")
LogSpecies <- chisholm_model(LogArea = LogArea, theta = coef(chisholm_fit)["theta"], m0 = coef(chisholm_fit)["m0"], K)
points_plot <- data.frame(LogArea, LogSpecies)
names(points_plot) <- c("LogArea", "LogSpecies")
#if the new RSq value is greater than the previous RSq value, store the results
if (RSq > a) {
best_fit_results <- results
best_plot_points <- points_plot
a <- RSq
}
}
}
points_list[[j]] <- best_plot_points #store best points for plotting
results_list[[j]] <- best_fit_results #store best RSq parameter results
file_name = paste("../Results/LogAreaSpeciesResults_", x[[2]][[1]], ".csv", sep="")
write.csv(results_list[[j]], (file_name))
merged_results = Reduce(function(...) merge(..., all=T), results_list)
write.csv(merged_results, "../Results/LogAreaSpeciesMergedResults.csv")
#If the model fitting worked, plot the model with the dataset
if(!is.na(best_fit_results[[1]])) {
#generate a vector of areas to for plotting our model fit
Area <- seq(min(data$LogArea),max(data$LogArea),len=length(data$LogArea))
#remove incomplete cases from our plot points
best_plot_points <- best_plot_points[complete.cases(best_plot_points),]
#plot the most successful model fit with the data
p <- ggplot(data, aes(x=LogArea, y=LogSpecies_rich)) +
geom_point() +
xlab("log Area") +
ylab("log Species Richness") +
theme_bw() +
ggtitle(paste("Species-Area Relationship", x[[2]][[1]], x[[1]][[1]])) +
theme(plot.title = element_text(size = 10, face = "bold")) +
geom_line(data = best_plot_points, aes(x = LogArea, y = LogSpecies)) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.5),hjust=.2,label=paste("R-Squared", format(round(results_list[[j]][[1]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.4),hjust=.2,label=paste("Theta", format(round(results_list[[j]][[2]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.3),hjust=.2,label=paste("Immigration", format(round(results_list[[j]][[3]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.2),hjust=.2,label=paste("Niches", results_list[[j]][[4]]))
plots[[j]] <- p
#Save plots
file_name = paste("../Results/LogAreaSpeciesPlot_", x[[2]][[1]], ".pdf", sep="")
pdf(file_name)
print(plots[[j]])
dev.off()
}
}
data$author
data$author[[1]]
data$author[[2]]
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
#####HERE WE LOAD ALL OF OUT DATASETS INTO A LIST OF DATAFRAMES#####
folder <- "../Data/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list()
#define the function
chisholm_model <- function(LogArea, theta, m0, K) {
rho = 1
K = K
Js = LogArea*rho
J_stars = Js/K
ms = m0/sqrt(LogArea)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#FOR EACH DATASET IN THE LIST OF DATAFRAMES
#FIND THE COLUMN WITH SPECIES IN IT AND RENAME THIS SPECIES_RICH
for (j in 1:length(datasets)) {
x <- data.frame(datasets[j])
LogArea <- log(x[5]) #assign the area column of our dataframe to a vector
LogSpecies_rich <- log(x[6])#assign the species richness column of our dataframe to a vector
data <- data.frame(LogArea, LogSpecies_rich) #bind into a new dataframe we will use for fitting
names(data) <- c("LogArea", "LogSpecies_rich") #rename the columns
data$LogArea <- as.numeric(as.character(data$LogArea)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
data <- data[is.finite(rowSums(data)),]
author <- x[[2]][[1]]
data <- data.frame(author, data)
best_fit_results <- NA
best_plot_points <- NA
a <- 0 #for re-setting RSq value after each dataset fit
#Loop through the model fitting, with niche values (K) from 1 to maximum species richness
#calculate R^2 value and store best parameter results
for(K in 1:max(length(data$LogSpecies_rich))) {
chisholm_fit <- try(nlsLM(LogSpecies_rich ~ chisholm_model(LogArea, theta, m0, K), data = data, start = list(theta = 200, m0 = 0.0005, K=K)), silent=T)
#Calculate the sum of squared errors - if there was no error in the model fitting!
if(class(chisholm_fit) != "try-error"){
RSS <- sum(residuals(chisholm_fit)^2) #Residual sum of squares of our NLLS model
TSS <- sum((data$LogSpecies_rich - mean(data$LogSpecies_rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#store these results
results <- data.frame(data$author[[1]], RSq, coef(chisholm_fit)["theta"], coef(chisholm_fit)["m0"], K)
names(results) <- c("Author", "R-Squared", "Theta", "Immigration", "Niches")
LogSpecies <- chisholm_model(LogArea = LogArea, theta = coef(chisholm_fit)["theta"], m0 = coef(chisholm_fit)["m0"], K)
points_plot <- data.frame(LogArea, LogSpecies)
names(points_plot) <- c("LogArea", "LogSpecies")
#if the new RSq value is greater than the previous RSq value, store the results
if (RSq > a) {
best_fit_results <- results
best_plot_points <- points_plot
a <- RSq
}
}
}
points_list[[j]] <- best_plot_points #store best points for plotting
results_list[[j]] <- best_fit_results #store best RSq parameter results
file_name = paste("../Results/LogAreaSpeciesResults_", x[[2]][[1]], ".csv", sep="")
write.csv(results_list[[j]], (file_name))
merged_results = Reduce(function(...) merge(..., all=T), results_list)
write.csv(merged_results, "../Results/LogAreaSpeciesMergedResults.csv")
#If the model fitting worked, plot the model with the dataset
if(!is.na(best_fit_results[[1]])) {
#generate a vector of areas to for plotting our model fit
Area <- seq(min(data$LogArea),max(data$LogArea),len=length(data$LogArea))
#remove incomplete cases from our plot points
best_plot_points <- best_plot_points[complete.cases(best_plot_points),]
#plot the most successful model fit with the data
p <- ggplot(data, aes(x=LogArea, y=LogSpecies_rich)) +
geom_point() +
xlab("log Area") +
ylab("log Species Richness") +
theme_bw() +
ggtitle(paste("Species-Area Relationship", x[[2]][[1]], x[[1]][[1]])) +
theme(plot.title = element_text(size = 10, face = "bold")) +
geom_line(data = best_plot_points, aes(x = LogArea, y = LogSpecies)) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.5),hjust=.2,label=paste("R-Squared", format(round(results_list[[j]][[1]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.4),hjust=.2,label=paste("Theta", format(round(results_list[[j]][[2]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.3),hjust=.2,label=paste("Immigration", format(round(results_list[[j]][[3]], 2), nsmall = 2))) +
annotate("text",x=(max(data$LogArea)*0.7),y=(max(data$LogSpecies_rich)*0.2),hjust=.2,label=paste("Niches", results_list[[j]][[4]]))
plots[[j]] <- p
#Save plots
file_name = paste("../Results/LogAreaSpeciesPlot_", x[[2]][[1]], ".pdf", sep="")
pdf(file_name)
print(plots[[j]])
dev.off()
}
}
View(results_list)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
folder <- "../Data/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
View(datasets)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
folder <- "../Data/Solman2020"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
folder <- "../Data/Solman2020/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
View(datasets)
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
j <-1
x <- data.frame(datasets[j])
View(x)
immigration_rate <- x[5] #assign the area column of our dataframe to a vector
ATP_count <- x[6] #assign the species richness column of our dataframe to a vector
data <- data.frame(immigration_rate, ATP_count) #bind into a new dataframe we will use for fitting
names(data) <- c("Immigration_Rate", "ATP_Count") #rename the columns
data$Immigration_Rate <- as.numeric(as.character(data$Immigration_Rate)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
best_plot_points <- NA
best_fit_results <- NA
View(data)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
folder <- "../Data/Solman2020/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
j <-2
x <- data.frame(datasets[j])
immigration_rate <- x[5] #assign the area column of our dataframe to a vector
cell_count <- x[6] #assign the species richness column of our dataframe to a vector
data <- data.frame(immigration_rate, cell_count) #bind into a new dataframe we will use for fitting
names(data) <- c("Immigration_Rate", "Cell_Count") #rename the columns
data$Immigration_Rate <- as.numeric(as.character(data$Immigration_Rate)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
best_plot_points <- NA
best_fit_results <- NA
View(data)
max(length(data$Cell_Count))
max(data$Cell_Count)
min(data$Cell_Count)
K <- 1
chisholm_fit <- try(nlsLM(cell_count ~ chisholm_model(area, theta, m0, K), data = data, start = list(area = Immigration_Rate, theta = 200, m0 = 0.0005, K=K)), silent=T)
#Calculate the sum of squared errors - if there was no error in the model fitting!
if(class(chisholm_fit) != "try-error"){
RSS <- sum(residuals(chisholm_fit)^2) #Residual sum of squares of our NLLS model
TSS <- sum((data$species_rich - mean(data$species_rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#store these results
results <- data.frame(RSq, coef(chisholm_fit)["theta"], coef(chisholm_fit)["m0"], K)
names(results) <- c("R-Squared", "Theta", "Immigration", "Niches")
species <- chisholm_model(area = area, theta = coef(chisholm_fit)["theta"], m0 = coef(chisholm_fit)["m0"], K)
points_plot <- data.frame(area, species)
names(points_plot) <- c("area", "species")
#if the new RSq value is greater than the previous RSq value, store the results
if (RSq > a) {
best_fit_results <- results
best_plot_points <- points_plot
a <- RSq
}
}
points_list[[j]] <- best_plot_points #store best points for plotting
results_list[[j]] <- best_fit_results #store best RSq parameter results
View(points_list)
View(results_list)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
#####HERE WE LOAD ALL OF OUT DATASETS INTO A LIST OF DATAFRAMES#####
folder <- "../Data/Solman2020/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#FOR EACH DATASET IN THE LIST OF DATAFRAMES
#FIND THE COLUMN WITH SPECIES IN IT AND RENAME THIS SPECIES_RICH
j <-2
x <- data.frame(datasets[j])
immigration_rate <- x[5] #assign the area column of our dataframe to a vector
cell_count <- x[6] #assign the species richness column of our dataframe to a vector
data <- data.frame(immigration_rate, cell_count) #bind into a new dataframe we will use for fitting
names(data) <- c("Immigration_Rate", "Cell_Count") #rename the columns
data$Immigration_Rate <- as.numeric(as.character(data$Immigration_Rate)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
best_plot_points <- NA
best_fit_results <- NA
for(K in 1:max(data$Cell_Count)) {
chisholm_fit <- try(nlsLM(cell_count ~ chisholm_model(area, theta, m0, K), data = data, start = list(area = Immigration_Rate, theta = 200, m0 = 0.0005, K=K)), silent=T)
#Calculate the sum of squared errors - if there was no error in the model fitting!
if(class(chisholm_fit) != "try-error"){
RSS <- sum(residuals(chisholm_fit)^2) #Residual sum of squares of our NLLS model
TSS <- sum((data$species_rich - mean(data$species_rich))^2) #Total sum of squares
RSq <- 1 - (RSS/TSS) #R-squared value
#store these results
results <- data.frame(RSq, coef(chisholm_fit)["theta"], coef(chisholm_fit)["m0"], K)
names(results) <- c("R-Squared", "Theta", "Immigration", "Niches")
species <- chisholm_model(area = area, theta = coef(chisholm_fit)["theta"], m0 = coef(chisholm_fit)["m0"], K)
points_plot <- data.frame(area, species)
names(points_plot) <- c("area", "species")
#if the new RSq value is greater than the previous RSq value, store the results
if (RSq > a) {
best_fit_results <- results
best_plot_points <- points_plot
a <- RSq
}
}
}
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
#####HERE WE LOAD ALL OF OUT DATASETS INTO A LIST OF DATAFRAMES#####
folder <- "../Data/Solman2020/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
#FOR EACH DATASET IN THE LIST OF DATAFRAMES
#FIND THE COLUMN WITH SPECIES IN IT AND RENAME THIS SPECIES_RICH
j <-2
x <- data.frame(datasets[j])
immigration_rate <- x[5] #assign the area column of our dataframe to a vector
cell_count <- x[6] #assign the species richness column of our dataframe to a vector
data <- data.frame(immigration_rate, cell_count) #bind into a new dataframe we will use for fitting
names(data) <- c("Immigration_Rate", "Cell_Count") #rename the columns
data$Immigration_Rate <- as.numeric(as.character(data$Immigration_Rate)) #make sure all values are numeric or NA
data <- data[complete.cases(data),] #remove NAs
best_plot_points <- NA
best_fit_results <- NA
plot(data$Immigration_Rate, data$Cell_Count)
View(data)
rm(list=ls())
graphics.off()
#install nlls fitting package
#install.packages("minpack.lm") <- if you've never installed minpack before
library("minpack.lm") #for nlls fitting
library("ggplot2")
folder <- "../Data/Solman2020/"  # path to folder that holds multiple .csv files
file_list <- list.files(path=folder, pattern="*.csv") # create list of all .csv files in folder
#load the csv files into a list
datasets <- lapply(file_list,
function(x)
read.csv(paste(folder, x, sep = ''),
stringsAsFactors = FALSE))
a <- 0 #will be used for storing best fit results in the loop
points_list <- list() #for storing our fitted points for plotting
results_list <- list() #for storing our RSq and parameter results
plots <- list() #this will be used for storing our plots!
#define the function
chisholm_model <- function(area, theta, m0, K) {
rho = 1
K = K
Js = area*rho
J_stars = Js/K
ms = m0/sqrt(area)
gamma_stars = J_stars*ms/(1-ms)
return(theta*(digamma(theta/K+gamma_stars*(digamma(gamma_stars+J_stars)-digamma(gamma_stars)))-digamma(theta/K)))
}
j <-2
x <- data.frame(datasets[j])
View(x)
out <- split(x, f = x$Date)
View(out)
out[1]
Mar05 <- out[1]
Mar12 <- out[2]
Feb27 <- out[3]
View(Mar05)
Mar05 <- data.frame(out[1])
View(Mar05)
Mar05 <- data.frame(out[1])
Mar12 <- data.frame(out[2])
Feb27 <- data.frame(out[3])
