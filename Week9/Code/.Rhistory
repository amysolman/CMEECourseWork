graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 4), ylim=c(0, 4), cex=0.5)
A <- list(0,0)
B <- list(3,4)
C <- list(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ]) #pick a new location
# #X <- c(((as.numeric(p[1]))/2), ((as.numeric(p[2]))/2)) #assign half of that new location to X
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
for (i in 1:1000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.3) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 4), ylim=c(0, 4), cex=0.5)
A <- list(0,0)
B <- list(3,4)
C <- list(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ]) #pick a new location
# #X <- c(((as.numeric(p[1]))/2), ((as.numeric(p[2]))/2)) #assign half of that new location to X
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
for (i in 1:100000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.3) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.5)
A <- list(0,0)
B <- list(3,4)
C <- list(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ]) #pick a new location
# #X <- c(((as.numeric(p[1]))/2), ((as.numeric(p[2]))/2)) #assign half of that new location to X
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
# p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# X <- 0.5*(p-X)
# points(X[1], X[2], cex = 0.3) #plot X
for (i in 1:100000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.3) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- list(0,0)
B <- list(3,4)
C <- list(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:100000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:100000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:100){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:10000){
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
X <- 0.5*(p-X)
points(X[1], X[2], cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-X[1])
y <- 0.5*(p[2]-X[2])
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
points(x, y, cex = 0.2) #plot X
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
for (i in 1:100) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:10000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- 0.5*(p[1]-x)
y <- 0.5*(p[2]-y)
points(x, y, cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[1] - x)/2)
y <- floor(y + (p[2] - y)/2)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[1] - x)/2)
y <- floor(y + (p[2] - y)/2)
points(x, y, cex = 0.2) #plot X
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[1] - x)/2)
y <- floor(y + (p[2] - y)/2)
points(x, y, cex = 0.2) #plot X
for (i in 1:10000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[1] - x)/2)
y <- floor(y + (p[2] - y)/2)
points(x, y, cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 3), ylim=c(0, 3), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
#ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
p <- c(A[1], B[1], C[1])
q <- c(A[2], B[2], C[2])
points(X[1], X[2], cex = 0.2) #plot X
p[1]
for (i in 1:100) {
#p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:10000) {
#p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
}
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
#ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
p <- c(A[1], B[1], C[1])
q <- c(A[2], B[2], C[2])
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:10000) {
#p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:10000) {
#p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:1000000) {
#p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
x <- floor(x + (p[n] - x)/2)
y <- floor(y + (q[n] - y)/2)
points(x, y, cex = 0.2) #plot X
}
View(ABC)
# clear any existing graphs and plot your graph within the R window
graphics.off()
# clear any existing graphs and plot your graph within the R window
graphics.off()
# clear any existing graphs and plot your graph within the R window
graphics.off()
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 10), ylim=c(0, 10), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
# p <- c(A[1], B[1], C[1])
# q <- c(A[2], B[2], C[2])
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:100) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
#n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
# x <- floor(x + (p[n] - x)/2)
# y <- floor(y + (q[n] - y)/2)
x <- ((x + p[1])/2)
y <- ((y + p[2])/2)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:1000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
#n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
# x <- floor(x + (p[n] - x)/2)
# y <- floor(y + (q[n] - y)/2)
x <- ((x + p[1])/2)
y <- ((y + p[2])/2)
points(x, y, cex = 0.2) #plot X
}
for (i in 1:10000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
#n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
# x <- floor(x + (p[n] - x)/2)
# y <- floor(y + (q[n] - y)/2)
x <- ((x + p[1])/2)
y <- ((y + p[2])/2)
points(x, y, cex = 0.2) #plot X
}
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 4), ylim=c(0, 4), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
# p <- c(A[1], B[1], C[1])
# q <- c(A[2], B[2], C[2])
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:10000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
#n <- sample(1:3, 1)
# x <- 0.5*(p[1]-x)
# y <- 0.5*(p[2]-y)
# x <- floor(x + (p[n] - x)/2)
# y <- floor(y + (q[n] - y)/2)
x <- ((x + p[1])/2)
y <- ((y + p[2])/2)
points(x, y, cex = 0.2) #plot X
}
chaos_game <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
plot(1, type="n", xlab="", ylab="", xlim=c(0, 4), ylim=c(0, 4), cex=0.2)
A <- c(0,0)
B <- c(3,4)
C <- c(4,1)
ABC <- rbind(A=A, B=B, C=C)
X <- as.numeric(A)
points(X[1], X[2], cex = 0.2) #plot X
for (i in 1:10000) {
p <- as.numeric(ABC[sample(nrow(ABC), 1), ])
x <- ((x + p[1])/2)
y <- ((y + p[2])/2)
points(x, y, cex = 0.2) #plot X
}
}
chaos_game()
# clear any existing graphs and plot your graph within the R window
graphics.off()
chaos_game()
