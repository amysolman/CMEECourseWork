simulations <- load(paste0("simulation_",i,".rda"))
}
for (i in 1:100) {
loaded <- load(paste0("../Results/simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
richness_500[[i]] <- species_richness_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
richness_1000[[i]] <- species_richness_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
richness_2500[[i]] <- species_richness_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
richness_5000[[i]] <- species_richness_list
}
}
}
}
}
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
richness_500[[i]] <- species_richness_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
richness_1000[[i]] <- species_richness_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
richness_2500[[i]] <- species_richness_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
richness_5000[[i]] <- species_richness_list
}
}
}
}
}
View(octave_1000)
View(octave_5000)
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
l1 <- lapply(richness_1000, function(x) x[lengths(x) > 0])
richness_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(richness_2500, function(x) x[lengths(x) > 0])
richness_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(richness_500, function(x) x[lengths(x) > 0])
richness_500 <- l1[lengths(l1) >  0]
l1 <- lapply(richness_5000, function(x) x[lengths(x) > 0])
richness_5000 <- l1[lengths(l1) >  0]
View(richness_1000)
View(octave_1000)
View(richness_1000)
View(octave_1000)
sim_500 <- list()
sim_1000 <- list()
sim_2500 <- list()
sim_5000 <- list()
for (i in 1:25) {
sim <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
sim_500[[i]] <- sim
} else {
if (size == 1000) {
sim_1000[[i]] <- sim
} else {
if (size == 2500) {
sim_2500[[i]] <- sim
} else {
if (size == 5000) {
sim_5000[[i]] <- sim
}
}
}
}
}
View(sim_1000)
View(richness_5000)
View(richness_500)
View(richness_5000)
View(octave_5000)
View(richness_500)
View(octave_2500)
View(richness_500)
View(richness_2500)
View(octave_5000)
View(octave_500)
View(octave_500)
octave_500[1]
octave_500[1][21:]
octave_500[1][21]
octave_500[1][1
]
octave_500[1][2]
octave_500[1][1]
oct_500[[1]]
octave_500[[1]]
octave_500[[1]][[1]]
octave_500[[1]][[21]]
octave_500[[1]][[2]]
octave_500[[1]][[17]]
octave_500[[1]][[3]]
octave_500[[1]][[21]]
octave_500[[1]][[10]]
octave_500[[1]][[40]]
octave_500[[1]][[80]]
octave_500[[1]][[81:]]
octave_500[[1]][[81:,]]
sim_500 <- octave_500[[1]][[-1:81]]
View(sim_500)
sim_500 <- octave_500[[1]][[-1:81]]
sim_500 <- octave_500[[1]][[1:81]]
View(sim_500)
sim_500 <- list()
sim_500 <- octave_500[[1]][[1:81]]
sim_500 <- octave_500[[1]][[81]]
octave_500[[1]][[-1:81]]
sim_500
sim_500 <- list()
sim_500 <- octave_500[[1]][[81-82]]
sim_500 <- list()
sim_500 <- octave_500[[1]][[81:82]]
sim_500 <- octave_500[[1]][[81,82]]
sim_500 <- octave_500[[1]][[1:3]]
sim_500 <- octave_500[[1]][[3]]
class(octave_500)
octave_500[[1]][[-1]]
octave_500[[1]]
octave_500[[1]][[-1]]
octave_500[[1]][[1]]
octave_500[[1]][[1]] <- NULL
View(octave_500)
octave_500 <- list()
octave_1000 <- list()
octave_2500 <- list()
octave_5000 <- list()
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
}
}
}
}
}
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
octave_500[[1]][[1,80]] <- NULL
View(octave_500)
for (i in 1:80) {
octave_500[[1]][[i]] <- NULL
}
View(octave_500)
View(octave_500)
View(octave_500)
octave_500 <- list()
octave_1000 <- list()
octave_2500 <- list()
octave_5000 <- list()
##########LOAD SPECIES OCTAVES AND RICHNESS BY SIMULATION SIZE###########
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
}
}
}
}
}
##########REMOVE NULL VALUES#########
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
newlist = octave_500[[1]][[80:]]
lapply(octave_500, function(x) x[-1])
View(octave_5000)
View(octave_5000)
View(octave_5000)
View(octave_500)
lapply(octave_500, function(x) x[-2])
View(octave_500)
newlist = octave_500[[1]][[80]]
newlist = octave_500[[1]][[80:100]]
newlist = octave_500[[1]][[80,100]]
newlist = octave_500[[1]][[1:2]]
newlist
View(newlist)
View(octave_500)
newlist = octave_500[[1]][[1]]
newlist = octave_500[[1]][[,1]]
newlist = octave_500[[1]][,1]
octave_500[[1]][1]
octave_500[[1]][1:4]
octave_500[[1]][1:80]
octave_500[[1]][1:80] <- NULL
View(octave_5000)
View(octave_500)
octave_500 <- list()
octave_1000 <- list()
octave_2500 <- list()
octave_5000 <- list()
##########LOAD SPECIES OCTAVES AND RICHNESS BY SIMULATION SIZE###########
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
}
}
}
}
}
##########REMOVE NULL VALUES#########
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
View(octave_500)
for (i in 1:25) {
octave_500[[i]][1:80] <- NULL
}
View(octave_500)
View(octave_1000)
for (i in 1:25) {
octave_1000[[i]][1:160] <- NULL
}
View(octave_1000)
octave_500 <- list()
octave_1000 <- list()
octave_2500 <- list()
octave_5000 <- list()
##########LOAD SPECIES OCTAVES AND RICHNESS BY SIMULATION SIZE###########
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
}
}
}
}
}
##########REMOVE NULL VALUES#########
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
#For octave_500 we need to work out the average species abundance octaves AFTER 4000 generations
#for simulation 1-25 in octave_5000 we want to save only results after 4000 generations (column 1)
#removes species abundance octaves before burn in time
for (i in 1:25) {
octave_500[[i]][1:80] <- NULL
}
for (i in 1:25) {
octave_1000[[i]][1:80] <- NULL
}
View(octave_1000)
octave_500 <- list()
octave_1000 <- list()
octave_2500 <- list()
octave_5000 <- list()
##########LOAD SPECIES OCTAVES AND RICHNESS BY SIMULATION SIZE###########
for (i in 1:100) {
loaded <- load(paste0("simulation_",i,".rda"))
if (size == 500) {
octave_500[[i]] <- species_octaves_list
} else {
if (size == 1000) {
octave_1000[[i]] <- species_octaves_list
} else {
if (size == 2500) {
octave_2500[[i]] <- species_octaves_list
} else {
if (size == 5000) {
octave_5000[[i]] <- species_octaves_list
}
}
}
}
}
##########REMOVE NULL VALUES#########
l1 <- lapply(octave_1000, function(x) x[lengths(x) > 0])
octave_1000 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_2500, function(x) x[lengths(x) > 0])
octave_2500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_500, function(x) x[lengths(x) > 0])
octave_500 <- l1[lengths(l1) >  0]
l1 <- lapply(octave_5000, function(x) x[lengths(x) > 0])
octave_5000 <- l1[lengths(l1) >  0]
for (i in 1:25) {
octave_500[[i]][1:80] <- NULL
octave_1000[[i]][1:80] <- NULL
octave_2500[[i]][1:80] <- NULL
octave_5000[[i]][1:80] <- NULL
}
View(octave_1000)
View(octave_2500)
View(octave_500)
View(octave_5000)
i <- 1
x <- octave_500[[i]]
y <- octave_500[[i+1]]
x <- sum_vect(x, y)
for (i in 2:25) {
y <- octave_500[[i+1]]
x <- sum_vect(x, y)
}
View(x)
View(y)
View(x)
View(y)
octave_500[[i]]
octave_500[[1]]
octave_500[[1]][1]
i <- 1 #assign value of 1 to i
x <- octave_500[[1]][i]
y <- octave_500[[1]][i+1]
x <- sum_vect(x, y)
for (i in 2:25) {
y <- octave_500[[1]][i+1]
x <- sum_vect(x, y)
View(x)
View(y)
View(x)
View(x)
View(x)
View(octave_500)
i <- 1 #assign value of 1 to i
x <- octave_500[[1]][i]
y <- octave_500[[1]][i+1]
x <- sum_vect(x, y)
View(x)
View(y)
View(x)
View(y)
x
View(sum_vect)
sum_vect(x, y)
length(x)
x[1]
x[[1]]
length(x[[1]])
i <- 1 #assign value of 1 to i
x <- octave_500[[1]][i]
y <- octave_500[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
x
for (i in 2:25) {
y <- octave_500[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
}
x
oct_500_total <- x/(length(octave_500)) #divide the totalled octave values by the number of octave values
oct_500_total
i <- 1 #assign value of 1 to i
x <- octave_1000[[1]][i]
y <- octave_1000[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
for (i in 2:25) {
y <- octave_1000[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
}
oct_1000_total <- x/(length(octave_1000))
oct_1000_total
oct_500_total
i <- 1 #assign value of 1 to i
x <- octave_2500[[1]][i]
y <- octave_2500[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
for (i in 2:25) {
y <- octave_2500[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
}
oct_2500_total <- x/(length(octave_2500))
i <- 1 #assign value of 1 to i
x <- octave_5000[[1]][i]
y <- octave_5000[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
for (i in 2:25) {
y <- octave_5000[[1]][i+1]
x <- sum_vect(x[[1]], y[[1]])
}
oct_5000_total <- x/(length(octave_5000))
graphics.off()
par(mfcol=c(2,2)) #initialize multi-paneled plot
par(mfg = c(1,1)) #specify which subplot to use first
barplot(oct_500_total,
xlab = "octaves", ylab = "Count", col = "lightblue", border = "pink",
main = 'Initial Maximum Diversity') #Add title
par(mfg = c(2,1)) #Second sub-plot
barplot(oct_1000_total, xlab = "octaves", ylab = "Count", col = "lightgreen",
border = "pink", main = 'Initial Minimum Diversity')
par(mfg = c(1,2)) #Second sub-plot
barplot(oct_2500_total, xlab = "octaves", ylab = "Count", col = "lightgreen",
border = "pink", main = 'Initial Minimum Diversity')
par(mfg = c(2,2)) #Second sub-plot
barplot(oct_5000_total, xlab = "octaves", ylab = "Count", col = "lightgreen",
border = "pink", main = 'Initial Minimum Diversity')
graphics.off()
par(mfcol=c(2,2)) #initialize multi-paneled plot
par(mfg = c(1,1)) #specify which subplot to use first
barplot(oct_500_total,
xlab = "octaves", ylab = "Count", col = "blue", border = "pink",
main = 'Community Size 500') #Add title
par(mfg = c(2,1)) #Second sub-plot
barplot(oct_1000_total, xlab = "octaves", ylab = "Count", col = "green",
border = "pink", main = 'Community Size 1000')
par(mfg = c(1,2)) #Second sub-plot
barplot(oct_2500_total, xlab = "octaves", ylab = "Count", col = "red",
border = "pink", main = 'Community Size 2500')
par(mfg = c(2,2)) #Second sub-plot
barplot(oct_5000_total, xlab = "octaves", ylab = "Count", col = "yellow",
border = "pink", main = 'Community Size 5000')
par(mfcol=c(2,2)) #initialize multi-paneled plot
par(mfg = c(1,1)) #specify which subplot to use first
barplot(oct_500_total,
xlab = "octaves", ylab = "Count", col = "blue", border = "pink",
main = 'Community Size 500') #Add title
par(mfg = c(1,2)) #Second sub-plot
barplot(oct_1000_total, xlab = "octaves", ylab = "Count", col = "green",
border = "pink", main = 'Community Size 1000')
par(mfg = c(2,1)) #Second sub-plot
barplot(oct_2500_total, xlab = "octaves", ylab = "Count", col = "red",
border = "pink", main = 'Community Size 2500')
par(mfg = c(2,2)) #Second sub-plot
barplot(oct_5000_total, xlab = "octaves", ylab = "Count", col = "yellow",
border = "pink", main = 'Community Size 5000')
graphics.off()
par(mfcol=c(2,2)) #initialize multi-paneled plot
par(mfg = c(1,1)) #specify which subplot to use first
barplot(oct_500_total,
xlab = "octaves", ylab = "Count", col = "blue", border = "pink",
main = 'Community Size 500') #Add title
par(mfg = c(1,2)) #Second sub-plot
barplot(oct_1000_total, xlab = "octaves", ylab = "Count", col = "green",
border = "pink", main = 'Community Size 1000')
par(mfg = c(2,1)) #Second sub-plot
barplot(oct_2500_total, xlab = "octaves", ylab = "Count", col = "red",
border = "pink", main = 'Community Size 2500')
par(mfg = c(2,2)) #Second sub-plot
barplot(oct_5000_total, xlab = "octaves", ylab = "Count", col = "yellow",
border = "pink", main = 'Community Size 5000')
combined_results <- list(oct_500_total, oct_1000_total, oct_2500_total, oct_5000_total) #create your list output here to return
View(combined_results)
combined_results
